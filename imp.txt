const mongoose = require("mongoose");
const ObjectId = mongoose.Types.ObjectId;
const User = require("../models/user");
const Product = require("../models/product");


const removeCart = async (req, res) => {
  try {
    const {_id} = req.user.userId;
    const { UserCart } = req.body;

    const user = await User.findById(_id);

    if (!user) {
      return res.status(404).json({ status: false, message: "User not found" });
    }

    const product = await Product.findById(new ObjectId(UserCart).toString());
    if (!product) {
      return res
        .status(404)
        .json({ status: false, message: "product not found" });
    }

    if (!user.cart.includes(UserCart)) {
      return res
        .status(400)
        .json({ status: false, message: "Product not in cart" });
    }

    user.cart = user.cart.filter((item) => !item.equals(UserCart));
    await user.save();

    res
      .status(200)
      .json({ status: true, message: "Product removed from cart", product });
  } catch (error) {
    console.error(error);
    res.status(500).json({ message: "Internal Server Error" });
  }
};